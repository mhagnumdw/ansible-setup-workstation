###########################################################################
#### Instalar Dropbox
###########################################################################

- name: Adicionar repositório do Dropbox
  ansible.builtin.yum_repository:
    name: Dropbox
    description: Dropbox Repository
    baseurl: http://linux.dropbox.com/fedora/$releasever/
    gpgkey: https://linux.dropbox.com/fedora/rpm-public-key.asc
    enabled: yes
    state: present
  become: true

- name: Install nautilus-dropbox
  ansible.builtin.dnf:
    name:
      - nautilus-dropbox
    state: present
    update_cache: yes
  become: true

- name: Iniciar Dropbox
  ansible.builtin.command: dropbox start
  changed_when: false # // TODO: ver se tem como definir
  register: dropbox_start_output

- name: Debug - Inicialização do Dropbox
  ansible.builtin.debug:
    # var: dropbox_start_output.stdout_lines
    var: dropbox_start_output.stdout

- name: The Dropbox daemon is not installed
  # when: dropbox_start_output.stdout | search("The Dropbox daemon is not installed")
  when: "'The Dropbox daemon is not installed' in dropbox_start_output.stdout"
  block:

    - name: Instalar o daemon do Dropbox
      # ansible.builtin.command: echo y | dropbox start --install
      ansible.builtin.shell: echo y | dropbox start --install
      register: dropbox_install_output
      changed_when: dropbox_install_output.stdout_lines[-1] == "Done!"
      # changed_when: false

    - name: Debug - Instalação o daemon do Dropbox
      ansible.builtin.debug:
        var: dropbox_install_output.stdout_lines

- name: Checar status
  ansible.builtin.command: dropbox status
  changed_when: false
  register: dropbox_status_output

- name: Logar no Dropbox pois não está logado
  when: "'To link this computer to a Dropbox account, visit the following url:' in dropbox_status_output.stdout"
  block:

    - name: Obter URL de login
      ansible.builtin.set_fact:
        url_login: "{{ dropbox_status_output.stdout_lines[-1] }}"

    - name: Debug URL Login
      ansible.builtin.debug:
        var: url_login

    # - name: Debug Dropbox password recebido por vars_prompt
    #   ansible.builtin.debug:
    #     var: dropbox_password

    # - name: Informe a senha do Dropbox para o usuário {{ vars_username }}
    #   ansible.builtin.pause:
    #     prompt: "Senha"
    #     echo: no
    #   register: password_result

    # # // TODO: remover
    # - name: "Show Dropbox Password"
    #   ansible.builtin.debug:
    #     var: password_result

    # // TODO: mover para o basic setup ? Acho que sim!
    # Fiz essa pergunta ao chatgpt e parece que a resposta dele foi boa:
    # "Crie pra mim uma role que vai receber um path e vai atualizar a
    # variável PATH definida no ~/.zshrc. Não deve permitir itens duplicados."
    - name: Adicionar diretório ~/.local/bin à variável PATH
      ansible.builtin.lineinfile:
        backup: yes
        path: ~/.zshrc
        line: 'export PATH="$PATH:{{ ansible_user_dir }}/.local/bin"'
        state: present
        regexp: '^export PATH='

    # - name: Instalar virtualenv e setuptools (com pip)
    #   ansible.builtin.pip:
    #     name:
    #       - virtualenv
    #       - setuptools
    #     state: present
    #   # become: yes

    # // TODO: deixar aqui ou mover pra uma task que Instala
    # coisas básicas de python?
    - name: Instalar virtualenv (com dnf)
      become: true
      ansible.builtin.dnf:
        name:
          - python3-virtualenv
        state: present

    - name: Criação do ambiente virtual
      # python -m venv .venv
      ansible.builtin.shell: |
        virtualenv .venv
      changed_when: false # // TODO: melhorar?
      args:
        chdir: dropbox_login

    - name: Instalação das dependências
      ansible.builtin.pip:
        requirements: dropbox_login/requirements.txt
        virtualenv: dropbox_login/.venv
        chdir: "."

    # // TODO: daquiiiiii: executar dropbox_login/dropbox_login.py
    - name: Executa o script python para logar no dropbox
      ansible.builtin.script: dropbox_login/dropbox_login.py
      args:
        executable: dropbox_login/.venv/bin/python3

# ------------------

# sudo timeshift --list | grep -i -e NAME -e Dropbox
# sudo timeshift --restore --snapshot "2023-03-20_21-52-24"
# sudo timeshift --restore
