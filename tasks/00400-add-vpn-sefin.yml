###########################################################################
#### Adicionar VPN da SEFIN
###########################################################################

# OBSERVAÇÃO: O playbook deve ser executado assim:
# ansible-playbook playbook.yml --ask-vault-pass
# ou
# ansible-playbook playbook.yml --vault-pass-file=<(echo $ANSIBLE_VAULT_PASS)

- name: Definir o nome da conexão
  ansible.builtin.set_fact:
    vpn_connection_name: "SEFIN-DESV-VPN-BY-ANSIBLE"

- name: Definir o nome do arquivo temporário da conexão
  ansible.builtin.set_fact:
    vpn_file_tmp: "/tmp/{{ vpn_connection_name }}.ovpn"

- name: Copiar arquivo criptografado da VPN
  ansible.builtin.copy:
    content: "{{ sefin_vpn_file_content }}"
    dest: "{{ vpn_file_tmp }}"
    mode: u=rw,g=,o=

- name: Verificar se a conexão existe
  ansible.builtin.command: nmcli connection show {{ vpn_connection_name }}
  register: connection_show_output
  ignore_errors: yes
  changed_when: false

- name: Deletar a conexão caso exista
  ansible.builtin.command: nmcli connection delete {{ vpn_connection_name }}
  when: connection_show_output.rc == 0
  register: connection_delete_output
  changed_when: "connection_delete_output.rc == 0"

# https://superuser.com/questions/219108/not-authorized-to-control-networking-in-ssh-console
- name: Permitir que o usuario modifique configuracoes de rede quando logado via ssh (PolKit) - usuario={{ ansible_user_id }}
  become: yes
  ansible.builtin.template:
    src: templates/allow-ssh-networking.pkla.j2
    dest: /etc/polkit-1/localauthority/50-local.d/allow-ssh-networking.pkla
    mode: u=rw,g=r,o=r

- name: Importar arquivo da VPN
  ansible.builtin.command: nmcli connection import type openvpn file {{ vpn_file_tmp }}
  register: connection_import_output
  changed_when: connection_import_output.stdout | regex_search("Connection \'" + vpn_connection_name + "\' \(.*?\) successfully added\.")
  failed_when: "connection_import_output.rc != 0 or 'Warning: There is another connection with the name' in connection_import_output.stdout"

# - name: Obter informações sobre o arquivo
#   ansible.builtin.stat:
#     path: "/etc/NetworkManager/system-connections/{{ vpn_connection_name }}.nmconnection"
#     checksum_algorithm: sha256
#   register: nm_vpn_file_stat
#   become: true # Devido a permissão do arquivo, é necessário para calcular o seu hash

# - name: Obter o hash do arquivo antes da mudança
#   ansible.builtin.set_fact:
#     nm_vpn_file_hash_before: "{{ nm_vpn_file_stat.stat.checksum }}"

# // TODO: liberar permissão pra obter o arquivo e mais a frente:
# daquiiiiiiiiiiiiiiiiiiiiiiii
# remover permissão
# descomentar changed_when com lookup
# sudo chmod o=r /etc/NetworkManager/system-connections/SEFIN-DESV-VPN-config.nmconnection

- name: "Personalizando a conexão da VPN"
  ansible.builtin.command:
    cmd: "{{ nmcli_command }}"
  with_items:
    - nmcli connection modify {{ vpn_connection_name }} ipv4.never-default yes
    - nmcli connection modify {{ vpn_connection_name }} ipv6.never-default yes
    - nmcli connection modify {{ vpn_connection_name }} ipv6.method disabled
    - nmcli connection modify {{ vpn_connection_name }} +vpn.data connection-type=password
    - nmcli connection modify {{ vpn_connection_name }} +vpn.data username="f0692311"
    # - nmcli connection modify "{{ vpn_connection_name }}" +vpn.secrets password="senha-aqui"
  loop_control:
    loop_var: nmcli_command
  changed_when: false # // TODO: não consegui uma forma simples de definir a regra do changed_when, poderia ser se o arquivo `.nmconnection` mudou
  # Like all templating, lookups execute and are evaluated on the Ansible control machine.
  # changed_when: (lookup('file', '/etc/NetworkManager/system-connections/SEFIN-DESV-VPN-BY-ANSIBLE.nmconnection') | hash('sha256')) != nm_vpn_file_hash_before

# sudo chmod o=--- /etc/NetworkManager/system-connections/SEFIN-DESV-VPN-config.nmconnection